module jsonlint.DB where

import sirocco.JDBC (Connection)
import sirocco.Sirocco

databaseURI = "jdbc:h2:~/test"

--- Creates a new connection
connection :: IO Connection
connection = createConnection databaseURI "sa" ""

createTableSQL = "CREATE TABLE IF NOT EXISTS requests (id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, " ++
                   "input TEXT NOT NULL, valid BOOLEAN NOT NULL)"

logRequest :: String -> Bool -> IO Int
logRequest text valid = 
    let sql = Just "INSERT INTO requests (input, valid) values (?, ?)"
        params = [toParam (Just text), toParam (Just valid)]
          in do update connection sql params

createRequestsTable :: IO ()
createRequestsTable = do
--execute :: IO Connection -> Maybe String -> IO Bool
  _ <- execute connection (Just "DROP TABLE requests")
  stmt <- execute connection (Just createTableSQL)
  println $ "Table 'requests' created: " ++ (show stmt)
