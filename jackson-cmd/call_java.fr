module jsonlint.CallJava where

data JacksonJsonNode = native com.fasterxml.jackson.databind.JsonNode where
    pure native toString :: JacksonJsonNode -> String

pure native getMessage :: IllegalArgumentException -> String

data JacksonWrapper = native com.github.LGLO.lambdadays.JacksonWrapper where
    pure native parse com.github.LGLO.lambdadays.JacksonWrapper.parse ::
                        String -> (IllegalArgumentException | JacksonJsonNode)

type ErrorStr = String
type Validate = String -> Either ErrorStr String

validateJson :: Validate
validateJson a = case (JacksonWrapper.parse a) of 
                   Left err -> Left (err.getMessage)
                   Right j -> Right j.toString

valid = "{ \"event\" : \"LambdaDays2016\", \"isGreat\":true}"
invalid = "[123, iamInvalid]"

main = do
         println $ "Validating: " ++ valid
         println $ validateJson valid 
         println $ "Validating: " ++ invalid
         println $ validateJson invalid
